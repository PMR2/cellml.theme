<?xml version="1.0" encoding="UTF-8"?>
<rules
    xmlns="http://namespaces.plone.org/diazo"
    xmlns:css="http://namespaces.plone.org/diazo/css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

    <!-- Note:

        This is an example theme only. It is reasonably complete, but not
        perfect, and not tested in all browsers. It is intended only to show
        how a reasonably complete theme can be constructed.

        See ``theme.html`` for the page layout and placeholders, ``theme.css``
        and ``bootstrap.css`` for the basic theme CSS (based on Twitter
        Bootstrap), and ``ploneui.css``, which contains CSS stolen from Plone's
        default Sunburst theme to style Plone-specific elements.

        -->

    <rules css:if-content="#visual-portal-wrapper">

        <theme href="theme.html" />

        <!-- Head elements -->
        <replace css:theme="html head title" css:content="html head title" />
        <after css:theme-children="html head" css:content="html head base" />
        <after css:theme-children="html head" css:content="html head style" />
        <after css:theme-children="html head" css:content="html head script" />
        <after css:theme-children="html head"
            css:content="html head link[rel='alternate']"/>

        <!-- Logo -->
        <replace css:theme="#logo" css:content="#logo" />
        <replace css:theme-children="#PartOfLogo" css:content-children="#PartOfLogo" />

        <!-- Tabs -->
        <replace css:theme-children="#tabs" css:content-children="#portal-globalnav"/>
        <replace css:content-children="#portal-globalnav .selected">
            <xsl:attribute name="class">
                <xsl:value-of select="string('active')" />
            </xsl:attribute>
            <xsl:apply-templates select="node()"/>
        </replace>

        <replace css:theme-children="#breadcrumbs" css:content="#portal-breadcrumbs" />

        <!-- for the hints on content-type specific styles -->
        <merge attributes="class id data-base-url data-portal-url dir" css:theme="body" css:content="body" />

        <!-- Personal tools -->
        <replace css:theme="#account-info" css:content="#portal-personaltools" />

        <!-- Search -->
        <replace css:theme-children="#searchbox" css:content="#portal-searchbox" />
        <after css:theme-children="#searchbox" css:content="#model-searchbox" />

        <!-- Portal messages -->

        <!-- Edit bar -->
        <!-- Do this later as there are other rules
        <prepend css:theme="#content" css:content="#edit-bar" />
        -->

        <!-- Main columns -->

        <prepend css:theme="#main">
            <xsl:attribute name="id">portal-columns</xsl:attribute>
        </prepend> 

        <prepend css:theme="#content">
            <xsl:attribute name="class">
                <xsl:value-of select="$cellml_theme_main"
                    /></xsl:attribute>
        </prepend>

        <prepend css:theme="#left-column">
            <xsl:attribute name="class">
                <xsl:value-of select="$cellml_theme_left"
                    /></xsl:attribute>
        </prepend>

        <prepend css:theme="#right-column">
            <xsl:attribute name="class">
                <xsl:value-of select="$cellml_theme_right"
                    /></xsl:attribute>
        </prepend>

        <prepend css:theme="#content" css:content="#edit-bar" />
        <prepend css:theme="#content"
            css:content="#portal-column-content &gt; div &gt; .portalMessage" />

        <replace css:content-children="#content"
            css:theme-children="#content" />
        <replace css:content-children="#portal-column-one"
            css:theme-children="#left-column" />
        <replace css:content-children="#portal-column-two"
            css:theme-children="#right-column" />

        <rules if="$no_left_portlets">
            <drop css:theme="#left-column" />
        </rules>

        <rules if="$no_right_portlets">
            <drop css:theme="#right-column" />
        </rules>

        <!-- Legacy tripoli-based skin -->
        <replace css:content-children=".homeTopics.clearfix">
            <xsl:attribute name="class">
                <xsl:value-of select="string('container')" />
            </xsl:attribute>
            <xsl:attribute name="id">
                <xsl:value-of select="string('headings')" />
            </xsl:attribute>
            <div class="row">
                <xsl:apply-templates select="node()"/>
            </div>
        </replace>
        <replace css:content-children=".htRowA">
            <xsl:attribute name="class">
                <xsl:value-of select="string('spansplit2')" />
            </xsl:attribute>
            <xsl:apply-templates select="node()"/>
        </replace>
        <replace css:content-children=".htRowB">
            <xsl:attribute name="class">
                <xsl:value-of select="string('spansplit2')" />
            </xsl:attribute>
            <xsl:apply-templates select="node()"/>
        </replace>

        <!--
          PloneSoftwareCenter is dumb with its lack of classes and 
          inline styles
        -->

        <drop attributes="style" css:content=".link-plain img" />

        <!-- Footer -->
        <replace css:theme-children="#cellml-footer" css:content-children="#cellml-footer" />
        <replace css:theme-children="#siteactions" css:content-children="#portal-siteactions" />
        <replace css:theme-children="#copyright" css:content-children="#copyright p" />

    </rules>

    <xsl:template match="table/@class[not(contains(., 'table'))]">
        <xsl:attribute name="class"><xsl:value-of select="." /> table</xsl:attribute>
    </xsl:template> 

    <xsl:template match="table[not(@class)]">
        <table class="table">
            <xsl:apply-templates select="node()"/>
        </table>
    </xsl:template> 

</rules>
